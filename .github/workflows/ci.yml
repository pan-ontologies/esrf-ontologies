name: Test, Lint and Format

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'
  workflow_dispatch:

jobs:
  py-test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip
        run: |
          python -m pip install --upgrade pip

      - name: Run linting with Flake8
        if: ${{ matrix.python-version == '3.12' }}
        run: |
          pip install "flake8 >=4"
          flake8 .

      - name: Check code formatting with Black
        if: ${{ matrix.python-version == '3.12' }}
        run: |
          pip install "black >=25"
          black --check .

      - name: Build source distribution
        run: |
          pip install build
          python -m build -s

      - name: Install source distribution
        run: |
          pip install --pre "$(ls dist/*.tar.gz)[test]"

      - name: Get distribution name (Linux/macOS)
        if: runner.os != 'Windows'
        env:
          REPO_NAME: ${{ github.event.repository.name }}
        run: |
          DISTRO_NAME="${REPO_NAME//-/_}"
          echo "DISTRO_NAME=${DISTRO_NAME}" >> $GITHUB_ENV

      - name: Get distribution name (Windows)
        if: runner.os == 'Windows'
        env:
          REPO_NAME: ${{ github.event.repository.name }}
        run: |
          $DISTRO_NAME = $REPO_NAME -replace '-', '_'
          echo "DISTRO_NAME=$DISTRO_NAME" | Out-File -Append -FilePath $env:GITHUB_ENV
        shell: pwsh

      - name: Test source distribution
        run: |
          pytest --pyargs ${DISTRO_NAME}

  owl-test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]  # windows-latest, macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Upgrade pip
        run: |
          python -m pip install --upgrade pip

      - name: Install transpilation dependencies
        run: |
          pip install .[dev]

      - name: Run ontology transpilation
        run: |
          python ontologies/parse.py

      - name: Check transpilation did not modify the python project
        run: |
          git diff --exit-code

      - name: Check ontology capitalization (X-ray vs X-Ray)
        run: |
          FILES="./ontologies/esrfet/ESRFET.owl ./ontologies/esrffair/ESRFFAIR.owl"
          if grep -nR "X-Ray" $FILES; then
            echo "❌ Found incorrect capitalization 'X-Ray'. Please use 'X-ray'."
            exit 1
          else
            echo "✅ No incorrect capitalization found."
          fi
