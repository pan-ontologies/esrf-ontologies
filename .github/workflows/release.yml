name: Publish to PyPI

on:
  workflow_dispatch:

jobs:
  build:
    name: Build package
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  publish-test-pypi:
    name: Publish to TestPyPI
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download built distributions
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Publish package to TestPyPI
        env:
          TWINE_USERNAME: ${{ secrets.TEST_PYPI_TOKEN }}
        run: |
          python -m pip install --upgrade twine
          twine upload --repository testpypi dist/*

  publish-pypi:
    name: Publish to PyPI
    needs: publish-test-pypi
    runs-on: ubuntu-latest

    steps:
      - name: Download built distributions
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Publish package to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_TOKEN }}
        run: |
          python -m pip install --upgrade twine
          twine upload dist/*

  tag-release:
    name: Tag release
    needs: publish-pypi
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get current version
        id: get_version
        run: |
          DISTRO_NAME="esrf_ontologies"
          VERSION=$(python -c "from importlib.metadata import version; print(version('${DISTRO_NAME}'))")
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "Detected version: ${VERSION}"

      - name: Create Git tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAGNAME="v${{ env.VERSION }}"
          REF_SHA="${{ github.sha }}"
          REPO="${{ github.repository }}"

          curl --request POST \
            --url "https://api.github.com/repos/${REPO}/git/refs" \
            --header "Authorization: Bearer ${GITHUB_TOKEN}" \
            --header "Accept: application/vnd.github.v3+json" \
            --data "{\"ref\": \"refs/tags/${TAGNAME}\", \"sha\": \"${REF_SHA}\"}"
